# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html

census_raw@text:
  type: text.TextDataSet
  filepath: s3://france-elections-ml/01_raw/FD_INDCVI_2017.csv

census_raw@CSV:
  type: france_elections_ML.extras.datasets.polars.csv_dataset.CSVDataSet
  filepath: s3://france-elections-ml/01_raw/FD_INDCVI_2017.csv
  load_args:
    sep: ";"
    infer_schema_length: null

census_metadata_raw@text:
  type: text.TextDataSet
  filepath: s3://france-elections-ml/01_raw/varmod_INDCVI_2017.csv

census_metadata_raw@CSV:
  type: pandas.CSVDataSet
  filepath: s3://france-elections-ml/01_raw/varmod_INDCVI_2017.csv
  load_args:
    sep: ";"

commune_code_raw@text:
  type: text.TextDataSet
  filepath: s3://france-elections-ml/01_raw/communes2020.csv

commune_code_raw@CSV:
  type: pandas.CSVDataSet
  filepath: s3://france-elections-ml/01_raw/communes2020.csv

IRIS_shape_raw:
  type: geopandas.GeoJSONDataSet
  filepath: s3://france-elections-ml/01_raw/CONTOURS-IRIS.shp

municipales_2020_t1_raw:
  type: text.TextDataSet
  filepath: s3://france-elections-ml/01_raw/2020-05-18-resultats-par-niveau-burvot-t1-france-entiere.txt

municipales_2020_t1_raw_fixed@text:
  type: text.TextDataSet
  filepath: s3://france-elections-ml/02_intermediate/municipales_2020_t1_raw_fixed.txt

municipales_2020_t1_raw_fixed@CSV:
  type: pandas.CSVDataSet
  filepath: s3://france-elections-ml/02_intermediate/municipales_2020_t1_raw_fixed.txt
  load_args:
    sep: "\t"

municipales_2020_t1:
  type: pandas.ParquetDataSet
  filepath: s3://france-elections-ml/02_intermediate/municipales_2020_t1.parquet

census_metadata:
  type: pandas.ParquetDataSet
  filepath: s3://france-elections-ml/02_intermediate/census_metadata.parquet

census:
  type: france_elections_ML.extras.datasets.polars.parquet_dataset.ParquetDataSet
  filepath: s3://france-elections-ml/02_intermediate/census.parquet
  save_args:
    use_pyarrow: True

commune_code_in_census:
  type: pandas.ParquetDataSet
  filepath: s3://france-elections-ml/02_intermediate/commune_code_in_census.parquet

census_tract_code:
  type: pandas.ParquetDataSet
  filepath: s3://france-elections-ml/02_intermediate/census_tract_code.parquet

commune_code:
  type: pandas.ParquetDataSet
  filepath: s3://france-elections-ml/02_intermediate/commune_code.parquet

commune_shape:
  type: geopandas.GeoJSONDataSet
  filepath: s3://france-elections-ml/02_intermediate/commune_shape.shp

census_tract_shape:
  type: geopandas.GeoJSONDataSet
  filepath: s3://france-elections-ml/02_intermediate/census_tract_shape.shp

{% for features in ["minimal", "light", "complex", "full"] %}
features_{{ features }}:
  type: france_elections_ML.extras.datasets.polars.parquet_dataset.ParquetDataSet
  filepath: s3://france-elections-ml/05_model_input/features_{{ features }}.parquet
  save_args:
    use_pyarrow: True

{% endfor %}

targets:
  type: pandas.ParquetDataSet
  filepath: s3://france-elections-ml/05_model_input/targets.parquet
